version: '3.9'

services: 
  #MongoDB service
  mongodb:
    container_name: node_mongo_db
    image: mongo:5.0.14-focal
    restart: always
    ports:
      - 2717:27017
    volumes: 
      - mongodb:/data/db

  #Node API service
  register:
    build: ./microservices/Register
    ports:
      - 4000:4000
    volumes: 
      - .:/Register
    environment: 
      PORT: 4000
      MONGODB_URI: mongodb://mongodb:27017
      DB_NAME: test
    depends_on: 
      - mongodb

  #MySQL service
  mysql-springboot:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$PASSWORD
      - MYSQL_DATABASE=$DATABASE_SPRINGBOOT
    ports:
      - 3307:3307
    volumes:
      - ./microservices/init:/docker-entrypoint-initdb.d
      #- db-springboot:/var/lib/mysql

  #SpingBoot API service
  reservation:
    depends_on:
      - mysql-springboot
    build: ./microservices/Reservation .
    restart: on-failure
    env_file: ./.env
    ports:
      - 9000:9000
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysql-springboot:3306/p-albus-rezervacija",
        "spring.datasource.username" : "root",
        "spring.datasource.password" : "localhost",
        "spring.datasource.driver-class-name": "com.mysql.cj.jdbc.Driver",
        "spring.jpa.database-platform": "org.hibernate.dialect.MySQL5Dialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'

  #Quarkus API service
  reservation-date:
    depends_on:
      - mysql-springboot
    build: ./microservices/ReservationDate
      #context: .
      #dockerfile: ./ReservationDate/src/main/docker/Dockerfile.native
    restart: on-failure
    env_file: ./.env
    ports:
      - 8000:8000
    environment:
      - quarkus.datasource.jdbc.url=jdbc:mysql://mysql-springboot:3306/p-albus-date-reservation
      - quarkus.datasource.jdbc.driver=com.mysql.cj.jdbc.Driver
      - quarkus.datasource.username=root
      - quarkus.datasource.password=localhost
      - quarkus.hibernate-orm.database.generation=update

  #Backend for frontend for desktop
  backend_for_desktop:
    build: ./backend_for_frontend
    ports:
      - 5000:5000
    volumes: 
      - .:/backend_for_frontend
    environment: 
      PORT: 5000

  #Backend for frontend for mobile
  backend_for_mobile:
    build: ./backend_for_frontend
    ports:
      - 5001:5001
    volumes: 
      - .:/backend_for_frontend
    environment: 
      PORT: 5001



volumes: 
  mongodb: {}
  #db-springboot: {}
  #db-quarkus: {}